# Generated by Django 5.2.4 on 2025-07-08 20:32

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Candidate',
            fields=[
                ('user_profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='candidate_profile', serialize=False, to='users.userprofile', verbose_name='User Account')),
                ('linkedin_profile_url', models.URLField(blank=True, help_text="URL to the candidate's LinkedIn profile.", null=True)),
                ('github_profile_url', models.URLField(blank=True, help_text="URL to the candidate's GitHub profile.", null=True)),
                ('portfolio_url', models.URLField(blank=True, help_text="URL to the candidate's personal portfolio or website.", null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Candidate Profile',
                'verbose_name_plural': 'Candidate Profiles',
            },
        ),
        migrations.CreateModel(
            name='Resume',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resume_file', models.FileField(help_text='The resume file uploaded by the candidate.', upload_to='resumes/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'docx', 'txt', 'rtf'])])),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('parse_status', models.CharField(choices=[('pending', 'Pending'), ('parsing', 'Parsing'), ('success', 'Success'), ('failed', 'Failed')], default='pending', help_text='Status of the resume parsing process.', max_length=10)),
                ('parsed_data', models.JSONField(blank=True, help_text='Structured data extracted from the resume by the parsing service.', null=True)),
                ('candidate', models.ForeignKey(help_text='The candidate to whom this resume belongs.', on_delete=django.db.models.deletion.CASCADE, related_name='resumes', to='candidates.candidate')),
            ],
            options={
                'verbose_name': 'Candidate Resume',
                'verbose_name_plural': 'Candidate Resumes',
                'ordering': ['-uploaded_at'],
            },
        ),
    ]
